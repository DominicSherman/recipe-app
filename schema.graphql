### This file was generated by Nexus Schema
### Do not make changes to this file directly

scalar DateTime

type Mutation {
  createOneRecipe(data: RecipeCreateInput!): Recipe!
}

type Query {
  recipe(where: RecipeWhereUniqueInput!): Recipe
  recipes(
    after: RecipeWhereUniqueInput
    before: RecipeWhereUniqueInput
    first: Int
    last: Int
  ): [Recipe!]!
  user(where: UserWhereUniqueInput!): User
  users(
    after: UserWhereUniqueInput
    before: UserWhereUniqueInput
    first: Int
    last: Int
  ): [User!]!
}

"""
A Recipe
"""
type Recipe {
  createdAt: DateTime!
  id: String!
  title: String!
  updatedAt: DateTime!
  user: User!
  userId: Int!
}

input RecipeCreateInput {
  createdAt: DateTime
  id: String
  title: String!
  updatedAt: DateTime
  user: UserCreateNestedOneWithoutRecipesInput!
}

input RecipeWhereUniqueInput {
  id: String
}

"""
A User
"""
type User {
  createdAt: DateTime!
  email: String
  emailVerified: DateTime
  id: Int!
  image: String
  name: String
  updatedAt: DateTime!
}

input UserCreateNestedOneWithoutRecipesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutRecipesInput
  create: UserCreateWithoutRecipesInput
}

input UserCreateOrConnectWithoutRecipesInput {
  create: UserCreateWithoutRecipesInput!
  where: UserWhereUniqueInput!
}

input UserCreateWithoutRecipesInput {
  createdAt: DateTime
  email: String
  emailVerified: DateTime
  image: String
  name: String
  updatedAt: DateTime
}

input UserWhereUniqueInput {
  email: String
  id: Int
}
